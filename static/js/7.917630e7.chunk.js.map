{"version":3,"sources":["../node_modules/classnames/index.js","assets/images/user-icon.jpeg","components/common/Preloader/Preloader.module.css","components/Users/UserCard/UserCard.module.css","components/common/Pagination/Pagination.module.css","components/common/Preloader/Preloader.tsx","redux/usersSelecrors.ts","components/Users/Search/Search.tsx","components/Users/UserCard/UserCard.tsx","components/Users/Users.tsx","components/common/Pagination/Pagination.tsx","components/Users/UsersPage.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","Preloader","className","ldsRipple","getUsers","state","usersPage","items","getPageSize","pageSize","getTotalCount","totalCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getErrorMessages","errorMessages","getFilter","filter","Search","React","memo","setFilter","initialValues","search","term","friend","String","onSubmit","setSubmitting","props","isSubmitting","setFieldValue","type","name","autoComplete","role","value","disabled","onClick","e","preventDefault","onClearSearchValue","UserCard","user","unfollow","follow","isAuth","onFollowUnfollow","method","id","to","userIcon","src","photos","small","alt","followed","some","Users","users","useSelector","getIsAuth","errorMessage","dispatch","useDispatch","followThunk","unfollowThunk","onFollowUnfollowErrorMessage","map","item","Pagination","portionSize","setCurrentPage","initialPortionNumber","Math","floor","useState","portionNumber","setPortionNumber","pagesCount","ceil","pages","portionCount","leftSidePageNumber","rightSidePageNumber","pagination","paginationList","pageItem","selectedPage","UsersPage","useSearchParams","searchParams","setSearchParams","page","actions","useEffect","searchValue","followersFilter","getUsersListThunk","getUsersList","actualSearchParams","get"],"mappings":"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","file":"static/js/7.917630e7.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default __webpack_public_path__ + \"static/media/user-icon.506e3070.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRipple\":\"Preloader_ldsRipple__39kqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userIcon\":\"UserCard_userIcon__3X0ty\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__1KkdA\",\"paginationList\":\"Pagination_paginationList__2NJHl\",\"pageItem\":\"Pagination_pageItem__2MtXm\",\"selectedPage\":\"Pagination_selectedPage__CblSr\"};","import React from \"react\";\nimport classes from './Preloader.module.css';\n\nconst Preloader: React.FC = () => {\n  return (\n    <div className={classes.ldsRipple}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n}\n\nexport default Preloader;\n","import { RootStateType } from './reduxStore';\n\n\nexport const getUsers = (state: RootStateType) => state.usersPage.items;\n\nexport const getPageSize = (state: RootStateType) => state.usersPage.pageSize;\n\nexport const getTotalCount = (state: RootStateType) => state.usersPage.totalCount;\n\nexport const getCurrentPage = (state: RootStateType) => state.usersPage.currentPage;\n\nexport const getIsFetching = (state: RootStateType) => state.usersPage.isFetching;\n\nexport const getFollowingInProgress = (state: RootStateType) => state.usersPage.followingInProgress;\n\nexport const getErrorMessages = (state: RootStateType) => state.usersPage.errorMessages;\n\nexport const getFilter = (state: RootStateType) => state.usersPage.filter;","import { Field, Form, Formik, FormikProps } from 'formik';\nimport React, { MouseEvent } from 'react';\nimport { FilterType, SetFilterType } from '../../../redux/usersPageReducer';\n\ntype FormValues = {\n  search: string;\n  friend: boolean | null | string;\n}\n\ntype SearchPropsType = {\n  filter: FilterType;\n  setFilter: SetFilterType;\n}\n\n\n\nexport const Search: React.FC<SearchPropsType> = React.memo(({ setFilter, filter }) => {\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n\n  const onClearSearchValue = (e: MouseEvent<HTMLButtonElement>, setFieldValue: any) => {\n    e.preventDefault();\n    \n    setFieldValue('search', '');\n    setFieldValue('friend', 'null');\n    \n    // setSearchParams({});\n    setFilter({ term: '', friend: null }, 1);\n  }\n\n\n  return (\n      <Formik<FormValues>\n        initialValues={{\n          search: filter.term,\n          friend: String(filter.friend),\n        }}\n        onSubmit={(\n          { search, friend },\n          { setSubmitting }\n        ) => {\n          // if (typeof friend === 'string') {\n          //   const newSearchParams = { term: search, friend: friend };\n          //   setSearchParams(newSearchParams);\n          // }\n          \n          const usersFilterValue = friend === 'true' ? true : friend === 'false' ? false : null;\n          const newFilter: FilterType = { term: search, friend: usersFilterValue };\n\n          setFilter(newFilter, 1);\n          setSubmitting(false);\n        }}\n      >\n\n        {\n          (props: FormikProps<FormValues>) => {\n            const { isSubmitting, setFieldValue } = props;\n\n            return (\n              <Form>\n                <Field\n                  type='text'\n                  name='search'\n                  autoComplete=\"off\"\n                />\n                <div role='group' aria-labelledby='my-radio-group'>\n                  <label>\n                    <Field type='radio' name='friend' value='true' />\n                    followed\n                  </label>\n                  <label>\n                    <Field type='radio' name='friend' value='false' />\n                    unfollowed\n                  </label>\n                  <label>\n                    <Field type='radio' name='friend' value='null' />\n                    all\n                  </label>\n                </div>\n                <button type='submit' disabled={isSubmitting}>Find</button>\n                <button onClick={(e) => onClearSearchValue(e, setFieldValue)}>Clear</button>\n              </Form>\n            )\n          }\n        }\n      </Formik>\n  );\n});\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classes from './UserCard.module.css'\nimport userIcon from '../../../assets/images/user-icon.jpeg'\nimport { UserType } from '../../../redux/usersPageReducer';\nimport { IsAuthType } from '../../../redux/authReducer';\n\ntype UserCardPropsType = {\n  user: UserType;\n  unfollow: (id: number) => void;\n  follow: (id: number) => void;\n  followingInProgress: Array<number>;\n  isAuth: IsAuthType;\n}\n\nexport const UserCard: React.FC<UserCardPropsType> = React.memo(({ \n  user, \n  unfollow, \n  follow, \n  followingInProgress, \n  isAuth, \n}) => {\n\n  const onFollowUnfollow = (method: (id: number) => void) => {\n    method(user.id)\n  }\n\n  const onFollow = () => {\n    onFollowUnfollow(follow);\n  }\n\n  const onUnfollow = () => {\n    onFollowUnfollow(unfollow);\n  }\n\n\n  return (\n    <li>\n      <NavLink to={`/profile/${user.id}`}>\n        <img className={classes.userIcon} src={user.photos.small ? user.photos.small : userIcon} alt=\"\" />\n      </NavLink>\n      \n      <span>{user.name}</span>\n\n      <div>\n        {\n          isAuth === 'authorized' &&\n          (user.followed\n            ? <button\n              disabled={followingInProgress.some(id => id === user.id)}\n              onClick={onUnfollow}\n            >\n              Unfollow\n            </button>\n\n            : <button\n              disabled={followingInProgress.some(id => id === user.id)}\n              onClick={onFollow}\n            >\n              Follow\n            </button>)\n        }\n      </div>\n    </li>\n  );\n});","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getIsAuth } from \"../../redux/authSelecrors\";\nimport { followThunk, unfollowThunk, UserType } from \"../../redux/usersPageReducer\";\nimport { getErrorMessages, getFollowingInProgress, getUsers } from \"../../redux/usersSelecrors\";\nimport { UserCard } from \"./UserCard/UserCard\";\n\nexport const Users: React.FC = React.memo(() => {\n\n  const users = useSelector(getUsers);\n  const followingInProgress = useSelector(getFollowingInProgress);\n  const isAuth = useSelector(getIsAuth);\n  const errorMessage = useSelector(getErrorMessages);\n\n  const dispatch = useDispatch();\n\n  const follow = (id: number) => dispatch(followThunk(id));\n  const unfollow = (id: number) => dispatch(unfollowThunk(id));\n\n  return (\n    <div>\n      {\n        errorMessage.onFollowUnfollowErrorMessage ? <div>{errorMessage.onFollowUnfollowErrorMessage}</div> : null\n      }\n      <ul>\n        {users.map((item: UserType) => {\n          return (\n            <UserCard\n              key={item.id}\n              user={item}\n              unfollow={unfollow}\n              follow={follow}\n              followingInProgress={followingInProgress}\n              isAuth={isAuth}\n            />\n          )\n        })}\n      </ul>\n    </div>\n  )\n});","import React, { useState } from 'react';\nimport classes from './Pagination.module.css'\nimport classNames from 'classnames';\nimport { FilterType, SetCurrentPageType } from '../../../redux/usersPageReducer';\n\ntype PaginationPropsType = {\n  totalCount: number;\n  pageSize: number;\n  currentPage: number;\n  setCurrentPage: SetCurrentPageType;\n  portionSize?: number;\n  filter: FilterType;\n}\n\nexport const Pagination: React.FC<PaginationPropsType> = React.memo(({\n  totalCount,\n  pageSize,\n  currentPage,\n  portionSize = 10,\n  setCurrentPage,\n  filter\n}) => {\n\n  const initialPortionNumber = Math.floor((currentPage - 1) / portionSize) + 1;\n  const [portionNumber, setPortionNumber] = useState(initialPortionNumber);\n\n  // const [searchParams, setSearchParams] = useSearchParams()\n\n  const onPageClick = (page: number) => {\n    setCurrentPage(page);\n    // setSearchParams({ ...filterParams, page: String(page) });\n  };\n\n  const pagesCount = Math.ceil(totalCount / pageSize);\n  const pages: Array<number> = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  const portionCount = Math.ceil(pagesCount / portionSize);\n  const leftSidePageNumber = (portionNumber - 1) * portionSize + 1;\n  const rightSidePageNumber = portionNumber * portionSize;\n\n  return (\n    <>\n      {\n        pagesCount > 1\n          ? <div className={classes.pagination}>\n            {\n              portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>PREV</button>\n            }\n\n            <ul className={classes.paginationList}>\n              {pages\n                .filter(item => item >= leftSidePageNumber && item <= rightSidePageNumber)\n                .map(item => {\n                  return (\n                    <li\n                      key={item}\n                      className={classNames(classes.pageItem, { [classes.selectedPage]: item === currentPage })}\n                      onClick={() => onPageClick(item)}\n                    >\n                      {item}\n                    </li>\n                  );\n                })}\n            </ul>\n\n            {\n              portionNumber < portionCount && <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>\n            }\n          </div>\n          : null\n      }\n    </>\n  )\n});","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions, FilterType, getUsersListThunk } from \"../../redux/usersPageReducer\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { getCurrentPage, getFilter, getIsFetching, getPageSize, getTotalCount } from \"../../redux/usersSelecrors\";\nimport { Search } from \"./Search/Search\";\nimport { Users } from \"./Users\";\nimport { Pagination } from \"../common/Pagination/Pagination\";\nimport { useSearchParams } from \"react-router-dom\";\n\n\nconst UsersPage: React.FC = React.memo(() => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = useSelector(getFilter);\n  const totalCount = useSelector(getTotalCount);\n  const pageSize = useSelector(getPageSize);\n  const currentPage = useSelector(getCurrentPage);\n  const isFetching = useSelector(getIsFetching);\n\n  const dispatch = useDispatch();\n\n  const setFilter = (filter: FilterType, page: number) => dispatch(actions.setFilter(filter, page));\n  const setCurrentPage = (page: number) => dispatch(actions.setCurrentPage(page));\n  const getUsersList = (\n    pageSize: number,\n    currentPage: number,\n    searchValue: string,\n    followersFilter: boolean | null\n  ) => dispatch(getUsersListThunk(pageSize, currentPage, searchValue, followersFilter));\n\n\n\n  useEffect(() => {\n    if (filter) {\n      getUsersList(pageSize, currentPage, filter.term, filter.friend);\n\n      const actualSearchParams: { term?: string, friend?: string, page?: string } = {};\n\n      if (filter.term) {\n        actualSearchParams.term = filter.term;\n      }\n      if (typeof filter.friend === 'boolean') {\n        actualSearchParams.friend = String(filter.friend);\n      }\n      if (currentPage > 1) {\n        actualSearchParams.page = String(currentPage);\n      }\n\n      setSearchParams(actualSearchParams);\n    }\n  }, [filter, currentPage]);\n\n  \n  useEffect(() => {\n    if (!filter) {\n      const term = searchParams.get('term') || '';\n      const friend = searchParams.get('friend') === 'true' ? true : searchParams.get('friend') === 'false' ? false : null;\n      const page = searchParams.get('page') || '1';\n      const filterValues: FilterType = { term, friend };\n  \n      setFilter(filterValues, +page);\n    }\n\n    return () => {\n      setFilter({ term: '', friend: null }, 1);\n    };\n  }, []);\n\n\n\n  return (\n    <>\n      {\n        filter\n          ? <>\n              <Search\n                filter={filter}\n                setFilter={setFilter}\n              />\n\n              {\n                isFetching\n                  ? <Preloader />\n                  : <>\n                    <Pagination\n                      totalCount={totalCount}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      setCurrentPage={setCurrentPage}\n                      portionSize={20}\n                      filter={filter as FilterType}\n                    />\n                    <Users />\n                  </>\n              }\n            </>\n          : null\n      }\n    </>\n  )\n});\n\n\nexport default UsersPage;"],"sourceRoot":""}