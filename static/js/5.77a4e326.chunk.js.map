{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","hoc/withAuthRedirect.js","assets/images/user-icon.jpeg","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/authSelecrors.js","redux/profileSelecrors.js","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withUrlData.js"],"names":["Textarea","input","meta","touched","error","props","className","classes","formControl","formControlTextarea","errorMessage","Input","type","label","inputTypeClass","formControlCheckbox","formControlInput","module","exports","max","maxLength300","value","length","undefined","required","WithAuthRedirect","Component","connect","state","isAuth","auth","userId","to","getAuth","getUserProfile","profilePage","userProfile","getUserStatus","userStatus","getPosts","posts","getInWaiting","inWaiting","reduxForm","form","handleSubmit","onSubmit","Field","name","component","placeholder","validate","Post","item","avatar","src","message","likeCount","MyPosts","addPost","resetForm","postsElements","map","likesCount","id","values","newPost","React","memo","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","onChange","e","target","onDoubleClick","isOwner","ProfileData","activeEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","contactName","contactValue","onClick","Contact","ProfileDataFormRedux","deactiveEditMode","console","log","ProfileInfo","myId","setPhoto","setProfileData","profileContent","Preloader","photos","large","userIcon","userPhoto","alt","files","disabled","initialValues","then","catch","Profile","getProfile","getStatus","reset","addPostAC","ProfileContainer","this","getCurrentUserData","prevProps","window","push","compose","useParams"],"mappings":"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","file":"static/js/5.77a4e326.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './FormControls.module.css'\n\n\nexport const Textarea = ({ input, meta: { touched, error }, ...props }) => {\n  return (\n    <div className={classes.formControl}>\n      <textarea\n        {...input}\n        {...props}\n        className={touched && error ? `${classes.error} ${classes.formControlTextarea}` : classes.formControlTextarea}>\n      </textarea>\n      {touched && (error && <span className={classes.errorMessage}> {error} </span>)}\n    </div>\n  );\n}\n\nexport const Input = ({ input, meta: { touched, error }, type, label }) => {\n  const inputTypeClass = type === 'checkbox' ? classes.formControlCheckbox : classes.formControlInput;\n\n  return (\n    <div className={classes.formControl}>\n      <label>{label}</label>\n      <input\n        type={type}\n        {...input}\n        className={touched && error ? `${classes.error} ${inputTypeClass}` : inputTypeClass}\n      />\n\n\n      {/* {\n        type === 'checkbox'\n          ? <input\n            type={type}\n            {...input}\n            className={touched && error ? `${classes.error} ${inputTypeClass}` : inputTypeClass}\n            checked={true}\n          />\n          : <input\n            type={type}\n            {...input}\n            className={touched && error ? `${classes.error} ${inputTypeClass}` : inputTypeClass}\n          />\n      } */}\n\n\n\n      {touched && (error && <span className={classes.errorMessage}> {error} </span>)}\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2axsW\",\"formControlTextarea\":\"FormControls_formControlTextarea__5AIlH\",\"formControlInput\":\"FormControls_formControlInput__gNBr0\",\"formControlCheckbox\":\"FormControls_formControlCheckbox__2ILOp\",\"error\":\"FormControls_error__24y5C\",\"errorMessage\":\"FormControls_errorMessage__NDl_o\"};","\nconst maxLength = (max) => {\n  return (value) => value && value.length > max ? `Max length is ${max} symbols` : undefined;\n}\n\n\n\nexport const maxLength300 = maxLength(300);\n\nexport const required = (value) => value ? undefined : 'Field is required';\n","import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const WithAuthRedirect = (Component) => {\n  \n  const AuthRedirectComponent = (props) => {\n\n    // console.log('redirect');\n\n    if (props.isAuth === 'notAuthorized' && !props.userId) {\n      return <Navigate to='/login' />\n    };\n\n    return <Component {...props} />;\n  }\n\n\n  const mapStateToProps = (state) => {\n    return {\n      isAuth: state.auth.isAuth,\n    }\n  }\n\n\n  return connect(mapStateToProps)(AuthRedirectComponent);;\n}\n\n\n","export default __webpack_public_path__ + \"static/media/user-icon.506e3070.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"avatar\":\"Post_avatar__1wBwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContent\":\"ProfileInfo_profileContent__uGti0\",\"userPhoto\":\"ProfileInfo_userPhoto__1UIR7\"};","export const getAuth = (state) => state.auth;","export const getUserProfile = (state) => state.profilePage.userProfile;\n\nexport const getUserStatus = (state) => state.profilePage.userStatus;\n\nexport const getPosts = (state) => state.profilePage.posts;\n\nexport const getInWaiting = (state) => state.profilePage.inWaiting;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength300, required } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/FormControls/FormControls';\n\nconst AddNewPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        name='newPost'\n        component={Textarea}\n        placeholder='Enter your post'\n        validate={[required, maxLength300]}\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm);","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <li className={classes.item}>\n      <img className={classes.avatar} src='https://скачать-ватсап-бесплатно.рус/wp-content/uploads/2018/10/kartinka-na-avatar-dlya-devushki-9.jpg' />\n\n      {props.message}\n\n      <div>\n        <span>{props.likeCount}</span>\n        <button>Like</button>\n      </div>\n    </li>\n  );\n}\n\nexport default Post;","import React from 'react';\n// import { connect } from 'react-redux';\n// import { reset } from 'redux-form';\n// import { addPostAC } from '../../../redux/profilePageReducer';\n// import { getPosts } from '../../../redux/profileSelecrors';\nimport AddNewPostForm from './AddNewPostForm/AddNewPostForm';\nimport Post from './Post/Post';\n\n\n\nconst MyPosts = ({ posts, addPost, resetForm }) => {\n\n  // console.log('MyPosts');\n\n  const postsElements = posts\n    .map(item => <Post key={item.id} message={item.message} likeCount={item.likesCount} />)\n\n\n  const addNewPost = (values) => {\n    addPost(values.newPost);\n    resetForm('profileAddNewPostForm');\n  }\n\n  return (\n    <div>\n      <AddNewPostForm onSubmit={addNewPost} />\n      <ul>\n        {postsElements}\n      </ul>\n    </div>\n  );\n}\n\n\n\n\n// class MyPosts extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.postsElements = this.props.posts\n//       .map(item => <Post key={item.id} message={item.message} likeCount={item.likesCount} />)\n\n//     this.addNewPost = this.addNewPost.bind(this);\n//   }\n\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({a: 17})\n//     }, 3000)\n//   }\n\n//   // shouldComponentUpdate(nextProps, nextState) {\n//   //   // if (nextProps.posts === this.props.posts && nextState === this.state) return false;\n//   //   // return true;\n\n//   //   return nextProps.posts !== this.props.posts || nextState !== this.state\n//   // }\n\n//   addNewPost(values) {\n//     this.props.addPost(values.newPost);\n//     this.props.resetForm('profileAddNewPostForm');\n//   }\n\n//   render() {\n\n//     console.log('MyPosts');\n\n//     return (\n//       <div>\n//         <AddNewPostForm onSubmit={this.addNewPost} />\n//         <ul>\n//           {this.postsElements}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n\n\n\n\n\n// export default MyPosts;\n\n\n\nexport default React.memo(MyPosts);\n\n\n\n// const mapStateToProps = (state) => {\n\n//   // console.log('map MyPost');\n\n//   return {\n//     posts: getPosts(state),\n//   }\n// }\n\n// export default connect(mapStateToProps, { reset, addPostAC })(MyPosts);","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status])\n\n  const activateEditMode = () => {\n    if (props.isOwner) {\n      setEditMode(true)\n    }\n  };\n  const deactivateEditMode = () => setEditMode(false);\n  const onChangeStatus = (e) => setStatus(e.target.value);\n  const onBlurStatus = () => {\n    deactivateEditMode();\n    props.setStatus(status);\n  }\n\n    return (\n      <div>\n        {\n          editMode\n            ? <input\n              autoFocus={true}\n              onBlur={onBlurStatus}\n              onChange={onChangeStatus} \n              type=\"text\"\n              value={status === null ? '' : status}\n            />\n            : <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\n        }\n      </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport classes from './ProfileInfo.module.css'\n// import ProfileStatus from './ProfileStatus/ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\nimport userIcon from '../../../assets/images/user-icon.jpeg'\nimport { Field } from 'redux-form';\nimport { Textarea, Input } from '../../common/FormControls/FormControls';\nimport { reduxForm } from 'redux-form';\nimport { useState } from 'react';\nimport { required } from '../../../utils/validators/validators';\n\nconst ProfileInfo = ({ userProfile, userStatus, setStatus, userId, myId, setPhoto, inWaiting, setProfileData }) => {\n\n  // console.log('ProfileInfo');\n\n  const [editMode, setEditMode] = useState(false);\n\n  const activeEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactiveEditMode = () => {\n    setEditMode(false);\n  }\n\n  const isOwner = (userId === myId);\n\n  const onChooseFile = (e) => {\n    if (e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  }\n\n  const onSubmitForm = (values) => {\n    console.log(values);\n    setProfileData(values)\n      .then(() => setEditMode(false))\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <>\n      {\n        userProfile\n          ? <div>\n            <div className={classes.profileContent}>\n              {inWaiting\n                ? <Preloader />\n                : <img src={userProfile.photos.large || userIcon} className={classes.userPhoto} alt=\"User photo\" />\n              }\n              {\n                isOwner && <input id='input-file' onChange={onChooseFile} type=\"file\" disabled={inWaiting} />\n              }\n              {\n                editMode\n                  ? <ProfileDataFormRedux\n                    initialValues={userProfile}\n                    userProfile={userProfile}\n                    onSubmit={onSubmitForm}\n                    deactiveEditMode={deactiveEditMode}\n                  />\n                  : <ProfileData\n                    userProfile={userProfile}\n                    activeEditMode={activeEditMode}\n                    isOwner={isOwner}\n                  />\n              }\n              <ProfileStatusWithHooks status={userStatus} setStatus={setStatus} isOwner={isOwner} />\n            </div>\n          </div>\n          : <Preloader />\n      }\n    </>\n  )\n}\n\nconst ProfileData = ({ userProfile, activeEditMode, isOwner }) => {\n  return (\n    <>\n      <h2>{userProfile.fullName}</h2>\n      <p>About me: {userProfile.aboutMe}</p>\n      <p>Looking for a job: {userProfile.lookingForAJob ? 'Yes' : 'No'}</p>\n      {\n        userProfile.lookingForAJob &&\n        <p>My skills: {userProfile.lookingForAJobDescription}</p>\n      }\n      <h3>Contacts</h3>\n      <ul>\n        {\n          Object.keys(userProfile.contacts)\n            .map(item => {\n              return <Contact key={item} contactName={item} contactValue={userProfile.contacts[item]} />\n            })\n        }\n      </ul>\n      {\n        isOwner && <button onClick={activeEditMode}>Edit</button>\n      }\n    </>\n  );\n}\n\nconst Contact = ({ contactName, contactValue }) => {\n  return (\n    <li>\n      {contactName}: {contactValue}\n    </li>\n  );\n}\n\nconst ProfileDataForm = ({ handleSubmit, deactiveEditMode, userProfile, error }) => {\n  console.log(error);\n  return (\n    <form onSubmit={handleSubmit}>\n      {\n        error && <div>{error}</div>\n      }\n      Full Name\n      <label>\n        <Field\n          name='fullName'\n          component={Input}\n          type='text'\n          // validate={[required]}\n        />\n      </label>\n      <label>\n        About me\n        <Field\n          name='aboutMe'\n          component={Textarea}\n          type='text'\n          validate={[required]}\n        />\n      </label>\n      <label>\n        Looking for a job\n        <Field\n          name='lookingForAJob'\n          component={Input}\n          type='checkbox'\n        />\n      </label>\n      <label>\n        My skills\n        <Field\n          name='lookingForAJobDescription'\n          component={Textarea}\n          type='text'\n          validate={[required]}\n        />\n      </label>\n      <ul>\n        <label>Contacts</label>\n        {Object.keys(userProfile.contacts)\n          .map(item => {\n            return (\n              <li key={item}>\n                <label>\n                  {item}\n                  <Field\n                    name={`contacts.${item}`}\n                    component={Input}\n                    type='text'\n                  />\n                </label>\n              </li>\n            );\n          })}\n      </ul>\n      <button>Done</button>\n      <button onClick={deactiveEditMode}>Close</button>\n    </form>\n  );\n}\n\nconst ProfileDataFormRedux = reduxForm({ form: 'profileDataForm' })(ProfileDataForm);\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = ({\n  userId,\n  auth,\n  userProfile,\n  userStatus,\n  myId,\n  getProfile,\n  getStatus,\n  setStatus,\n  posts,\n  reset,\n  addPostAC,\n  setPhoto,\n  inWaiting,\n  setProfileData\n}) => {\n\n\n  // console.log('Profile');\n\n  return (\n    <div>\n      <ProfileInfo\n        userId={userId}\n        myId={myId}\n        userProfile={userProfile}\n        userStatus={userStatus}\n        auth={auth}\n        getProfile={getProfile}\n        getStatus={getStatus}\n        setStatus={setStatus}\n        setPhoto={setPhoto}\n        inWaiting={inWaiting}\n        setProfileData={setProfileData}\n      />\n      <MyPosts\n        posts={posts}\n        resetForm={reset}\n        addPost={addPostAC}\n      />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { reset } from 'redux-form';\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { WithURLData } from '../../hoc/withUrlData';\nimport { getAuth } from '../../redux/authSelecrors';\nimport { addPostAC, setProfileData, getProfile, getStatus, setPhoto, setStatus } from '../../redux/profilePageReducer';\nimport { getInWaiting, getPosts, getUserProfile, getUserStatus } from '../../redux/profileSelecrors';\nimport Profile from './Profile';\n\n\nclass ProfileContainer extends React.Component {\n\n  getCurrentUserData() {\n    this.userId = this.props.userId;\n\n    if (!this.userId) {\n      const { isAuth, id } = this.props.auth;\n      if (isAuth === 'authorized') {\n        this.userId = id;\n      } \n    }\n    this.props.getProfile(this.userId);\n    this.props.getStatus(this.userId);\n  }\n\n  componentDidMount() {\n    this.getCurrentUserData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getCurrentUserData();\n    }\n  }\n\n\n  render() {\n\n    window.props.push(this.props.posts);\n\n    // console.log('ProfileContainer');\n\n    return ( \n      <Profile {...this.props} userId={this.userId} myId={this.props.auth.id} />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log('map ProfileContainer');\n\n  return {\n    userProfile: getUserProfile(state),\n    userStatus: getUserStatus(state),\n    auth: getAuth(state),\n    posts: getPosts(state),\n    inWaiting: getInWaiting(state),\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, { getProfile, getStatus, setStatus, reset, addPostAC, setPhoto, setProfileData }),\n  WithAuthRedirect,\n  WithURLData,\n)(ProfileContainer);","import { useParams } from \"react-router-dom\"\n\n\nexport const WithURLData = (Component) => {\n  const URLDataComponent = (props) => {\n\n    // console.log('url data');\n\n    // Использование данного хука приводит к перерисовке URLDataComponent!!!\n    // Из за этого перерисовываются вложенные компоненты!!!\n    let userId = useParams().userId;\n\n    // let a = useParams().userId;\n    // let userId = 21727;\n\n    return (\n      <Component {...props} userId={userId} />\n    )\n  }\n\n  return URLDataComponent;\n}"],"sourceRoot":""}