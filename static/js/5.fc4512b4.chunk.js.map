{"version":3,"sources":["../node_modules/redux-form/es/index.js","components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","hoc/withAuthRedirect.js","utils/validators/validators.js","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","redux/authSelecrors.js","redux/profileSelecrors.js","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withUrlData.js"],"names":["reset","actions","arrayInsert","arrayMove","arrayPop","arrayPush","arrayRemove","arrayRemoveAll","arrayShift","arraySplice","arraySwap","arrayUnshift","autofill","blur","change","clearAsyncError","clearFields","clearSubmit","clearSubmitErrors","destroy","focus","initialize","registerField","resetSection","setSubmitFailed","setSubmitSucceeded","startAsyncValidation","startSubmit","stopAsyncValidation","stopSubmit","submit","touch","unregisterField","untouch","updateSyncWarnings","updateSyncErrors","Textarea","input","meta","touched","error","props","className","classes","formControl","formControlTextarea","errorMessage","Input","type","label","inputTypeClass","formControlCheckbox","formControlInput","module","exports","WithAuthRedirect","Component","connect","state","isAuth","auth","userId","to","max","maxLength300","value","length","undefined","required","getAuth","getUserProfile","profilePage","userProfile","getUserStatus","userStatus","getPosts","posts","reduxForm","form","handleSubmit","onSubmit","Field","name","component","placeholder","validate","Post","item","avatar","src","message","likeCount","MyPosts","addPost","resetForm","console","log","postsElements","map","likesCount","id","values","newPost","React","memo","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","autoFocus","onBlur","onChange","e","target","onDoubleClick","myId","ProfileInfo","profileContent","photos","large","alt","fullName","aboutMe","Preloader","Profile","getProfile","getStatus","addPostAC","ProfileContainer","this","window","push","compose","useParams"],"mappings":"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","file":"static/js/5.fc4512b4.chunk.js","sourcesContent":["import actions from './actions';\nexport { default as actionTypes } from './actionTypes';\nexport { ReduxFormContext } from './ReduxFormContext';\nexport { default as defaultShouldAsyncValidate } from './defaultShouldAsyncValidate';\nexport { default as defaultShouldValidate } from './defaultShouldValidate';\nexport { default as defaultShouldError } from './defaultShouldError';\nexport { default as defaultShouldWarn } from './defaultShouldWarn';\nexport { default as Form } from './Form';\nexport { default as FormName } from './FormName';\nexport { default as FormSection } from './FormSection';\nexport { SubmissionError } from './SubmissionError'; // alias for propTypes\n\nexport { default as propTypes, fieldInputPropTypes, fieldMetaPropTypes, fieldPropTypes, fieldArrayFieldsPropTypes, fieldArrayMetaPropTypes, fieldArrayPropTypes, formPropTypes } from './propTypes';\nexport { default as Field } from './Field';\nexport { default as Fields } from './Fields';\nexport { default as FieldArray } from './FieldArray';\nexport { default as formValueSelector } from './formValueSelector';\nexport { default as formValues } from './formValues';\nexport { default as getFormError } from './getFormError';\nexport { default as getFormNames } from './getFormNames';\nexport { default as getFormValues } from './getFormValues';\nexport { default as getFormInitialValues } from './getFormInitialValues';\nexport { default as getFormSyncErrors } from './getFormSyncErrors';\nexport { default as getFormMeta } from './getFormMeta';\nexport { default as getFormAsyncErrors } from './getFormAsyncErrors';\nexport { default as getFormSyncWarnings } from './getFormSyncWarnings';\nexport { default as getFormSubmitErrors } from './getFormSubmitErrors';\nexport { default as isAsyncValidating } from './isAsyncValidating';\nexport { default as isDirty } from './isDirty';\nexport { default as isInvalid } from './isInvalid';\nexport { default as isPristine } from './isPristine';\nexport { default as isValid } from './isValid';\nexport { default as isSubmitting } from './isSubmitting';\nexport { default as hasSubmitSucceeded } from './hasSubmitSucceeded';\nexport { default as hasSubmitFailed } from './hasSubmitFailed';\nexport { default as reduxForm } from './reduxForm';\nexport { default as reducer } from './reducer';\nexport { default as values } from './values';\nexport var arrayInsert = actions.arrayInsert;\nexport var arrayMove = actions.arrayMove;\nexport var arrayPop = actions.arrayPop;\nexport var arrayPush = actions.arrayPush;\nexport var arrayRemove = actions.arrayRemove;\nexport var arrayRemoveAll = actions.arrayRemoveAll;\nexport var arrayShift = actions.arrayShift;\nexport var arraySplice = actions.arraySplice;\nexport var arraySwap = actions.arraySwap;\nexport var arrayUnshift = actions.arrayUnshift;\nexport var autofill = actions.autofill;\nexport var blur = actions.blur;\nexport var change = actions.change;\nexport var clearAsyncError = actions.clearAsyncError;\nexport var clearFields = actions.clearFields;\nexport var clearSubmit = actions.clearSubmit;\nexport var clearSubmitErrors = actions.clearSubmitErrors;\nexport var destroy = actions.destroy;\nexport var focus = actions.focus;\nexport var initialize = actions.initialize;\nexport var registerField = actions.registerField;\nexport var reset = actions.reset;\nexport var resetSection = actions.resetSection;\nexport var setSubmitFailed = actions.setSubmitFailed;\nexport var setSubmitSucceeded = actions.setSubmitSucceeded;\nexport var startAsyncValidation = actions.startAsyncValidation;\nexport var startSubmit = actions.startSubmit;\nexport var stopAsyncValidation = actions.stopAsyncValidation;\nexport var stopSubmit = actions.stopSubmit;\nexport var submit = actions.submit;\nexport var touch = actions.touch;\nexport var unregisterField = actions.unregisterField;\nexport var untouch = actions.untouch;\nexport var updateSyncWarnings = actions.updateSyncWarnings;\nexport var updateSyncErrors = actions.updateSyncErrors;","import React from 'react';\nimport classes from './FormControls.module.css'\n\n\nexport const Textarea = ({ input, meta: { touched, error }, ...props }) => {\n  return (\n    <div className={classes.formControl}>\n      <textarea\n        {...input}\n        {...props}\n        className={touched && error ? `${classes.error} ${classes.formControlTextarea}` : classes.formControlTextarea}>\n      </textarea>\n      {touched && (error && <span className={classes.errorMessage}> {error} </span>)}\n    </div>\n  );\n}\n\nexport const Input = ({ input, meta: { touched, error }, type, label }) => {\n  const inputTypeClass = type === 'checkbox' ? classes.formControlCheckbox : classes.formControlInput;\n\n  return (\n    <div className={classes.formControl}>\n      <label>{label}</label>\n      <input\n        type={type}\n        {...input}\n        className={touched && error ? `${classes.error} ${inputTypeClass}` : inputTypeClass}>\n      </input>\n      {touched && (error && <span className={classes.errorMessage}> {error} </span>)}\n    </div>\n  );\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2axsW\",\"formControlTextarea\":\"FormControls_formControlTextarea__5AIlH\",\"formControlInput\":\"FormControls_formControlInput__gNBr0\",\"formControlCheckbox\":\"FormControls_formControlCheckbox__2ILOp\",\"error\":\"FormControls_error__24y5C\",\"errorMessage\":\"FormControls_errorMessage__NDl_o\"};","import { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const WithAuthRedirect = (Component) => {\n  \n  const AuthRedirectComponent = (props) => {\n\n    if (props.isAuth === 'notAuthorized' && !props.userId) {\n      return <Navigate to='/login' />\n    };\n\n    return <Component {...props} />;\n  }\n\n\n  const mapStateToProps = (state) => {\n    return {\n      isAuth: state.auth.isAuth,\n    }\n  }\n\n\n  return connect(mapStateToProps)(AuthRedirectComponent);;\n}\n\n\n","\nconst maxLength = (max) => {\n  return (value) => value && value.length > max ? `Max length is ${max} symbols` : undefined;\n}\n\n\n\nexport const maxLength300 = maxLength(300);\n\nexport const required = (value) => value ? undefined : 'Field is required';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"avatar\":\"Post_avatar__1wBwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContent\":\"ProfileInfo_profileContent__uGti0\"};","export const getAuth = (state) => state.auth;","export const getUserProfile = (state) => state.profilePage.userProfile;\n\nexport const getUserStatus = (state) => state.profilePage.userStatus;\n\nexport const getPosts = (state) => state.profilePage.posts;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength300, required } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/FormControls/FormControls';\n\nconst AddNewPostForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field\n        name='newPost'\n        component={Textarea}\n        placeholder='Enter your post'\n        validate={[required, maxLength300]}\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default reduxForm({ form: 'profileAddNewPostForm' })(AddNewPostForm);","import React from 'react';\nimport classes from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <li className={classes.item}>\n      <img className={classes.avatar} src='https://скачать-ватсап-бесплатно.рус/wp-content/uploads/2018/10/kartinka-na-avatar-dlya-devushki-9.jpg' />\n\n      {props.message}\n\n      <div>\n        <span>{props.likeCount}</span>\n        <button>Like</button>\n      </div>\n    </li>\n  );\n}\n\nexport default Post;","import React from 'react';\n// import { connect } from 'react-redux';\n// import { reset } from 'redux-form';\n// import { addPostAC } from '../../../redux/profilePageReducer';\n// import { getPosts } from '../../../redux/profileSelecrors';\nimport AddNewPostForm from './AddNewPostForm/AddNewPostForm';\nimport Post from './Post/Post';\n\n\n\nconst MyPosts = ({ posts, addPost, resetForm }) => {\n\n  console.log('MyPosts');\n\n  const postsElements = posts\n    .map(item => <Post key={item.id} message={item.message} likeCount={item.likesCount} />)\n\n\n  const addNewPost = (values) => {\n    addPost(values.newPost);\n    resetForm('profileAddNewPostForm');\n  }\n\n  return (\n    <div>\n      <AddNewPostForm onSubmit={addNewPost} />\n      <ul>\n        {postsElements}\n      </ul>\n    </div>\n  );\n}\n\n\n\n\n// class MyPosts extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.postsElements = this.props.posts\n//       .map(item => <Post key={item.id} message={item.message} likeCount={item.likesCount} />)\n\n//     this.addNewPost = this.addNewPost.bind(this);\n//   }\n\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({a: 17})\n//     }, 3000)\n//   }\n\n//   // shouldComponentUpdate(nextProps, nextState) {\n//   //   // if (nextProps.posts === this.props.posts && nextState === this.state) return false;\n//   //   // return true;\n\n//   //   return nextProps.posts !== this.props.posts || nextState !== this.state\n//   // }\n\n//   addNewPost(values) {\n//     this.props.addPost(values.newPost);\n//     this.props.resetForm('profileAddNewPostForm');\n//   }\n\n//   render() {\n\n//     console.log('MyPosts');\n\n//     return (\n//       <div>\n//         <AddNewPostForm onSubmit={this.addNewPost} />\n//         <ul>\n//           {this.postsElements}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n\n\n\n\n\n// export default MyPosts;\n\n\n\nexport default React.memo(MyPosts);\n\n\n\n// const mapStateToProps = (state) => {\n\n//   // console.log('map MyPost');\n\n//   return {\n//     posts: getPosts(state),\n//   }\n// }\n\n// export default connect(mapStateToProps, { reset, addPostAC })(MyPosts);","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status])\n\n  const activateEditMode = () => {\n    if (props.myId === props.userId) {\n      setEditMode(true)\n    }\n  };\n  const deactivateEditMode = () => setEditMode(false);\n  const onChangeStatus = (e) => setStatus(e.target.value);\n  const onBlurStatus = () => {\n    deactivateEditMode();\n    props.setStatus(status);\n  }\n\n    return (\n      <>\n        {\n          editMode\n            ? <input\n              autoFocus={true}\n              onBlur={onBlurStatus}\n              onChange={onChangeStatus} \n              type=\"text\"\n              value={status === null ? '' : status}\n            />\n            : <span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\n        }\n      </>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport classes from './ProfileInfo.module.css'\n// import ProfileStatus from './ProfileStatus/ProfileStatus';\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\n\nconst ProfileInfo = ({ userProfile, userStatus, setStatus, userId, myId }) => {\n\n  console.log('ProfileInfo');\n\n  return (\n    <>\n      {\n        userProfile\n          ?\n          <div>\n            <div className={classes.profileContent}>\n              <img src={userProfile.photos.large} alt=\"Avatar\" />\n              <h2>{userProfile.fullName}</h2>\n              <ProfileStatusWithHooks status={userStatus} setStatus={setStatus} userId={userId} myId={myId} />\n              <p>{userProfile.aboutMe}</p>\n            </div>\n          </div>\n          : <Preloader />\n      }\n    </>\n  )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport MyPosts from './MyPosts/MyPosts';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = ({\n  userId,\n  auth,\n  userProfile,\n  userStatus,\n  myId,\n  getProfile,\n  getStatus,\n  setStatus,\n  posts,\n  reset,\n  addPostAC,\n}) => {\n\n\n  console.log('Profile');\n\n  return (\n    <div>\n      <ProfileInfo\n        userId={userId}\n        myId={myId}\n        userProfile={userProfile}\n        userStatus={userStatus}\n        auth={auth}\n        getProfile={getProfile}\n        getStatus={getStatus}\n        setStatus={setStatus}\n      />\n      <MyPosts\n        posts={posts}\n        resetForm={reset}\n        addPost={addPostAC}\n      />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { reset } from 'redux-form';\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { WithURLData } from '../../hoc/withUrlData';\nimport { getAuth } from '../../redux/authSelecrors';\nimport { addPostAC, getProfile, getStatus, setStatus } from '../../redux/profilePageReducer';\nimport { getPosts, getUserProfile, getUserStatus } from '../../redux/profileSelecrors';\nimport Profile from './Profile';\n\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n\n    this.userId = this.props.userId;\n\n    if (!this.userId) {\n      const { isAuth, id } = this.props.auth;\n      if (isAuth === 'authorized') {\n        this.userId = id;\n      } \n    }\n    this.props.getProfile(this.userId);\n    this.props.getStatus(this.userId);\n  }\n\n\n  render() {\n\n    window.props.push(this.props.posts);\n\n    console.log('ProfileContainer');\n\n    return ( \n      <Profile {...this.props} userId={this.userId} myId={this.props.auth.id} />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: getUserProfile(state),\n    userStatus: getUserStatus(state),\n    auth: getAuth(state),\n    posts: getPosts(state),\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps, { getProfile, getStatus, setStatus, reset, addPostAC }),\n  WithURLData,\n  WithAuthRedirect\n)(ProfileContainer);","import { useParams, useNavigate } from \"react-router-dom\"\n\n\nexport const WithURLData = (Component) => {\n  const URLDataComponent = (props) => {\n    const userId = useParams().userId;\n\n\n    return (\n      <Component {...props} userId={userId} />\n    )\n  }\n\n  return URLDataComponent;\n}"],"sourceRoot":""}